version: '3.8'


services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    restart: always
    ports:
      - "8123:8123" # HTTP interface for Superset and clients
      - "9000:9000" # ClickHouse native client interface
    environment:
      CLICKHOUSE_USER: ch_user
      CLICKHOUSE_PASSWORD: ch_password
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    volumes:
      - ./clickhouse/init_scripts/:/docker-entrypoint-initdb.d/
      #- ./clickhouse/config.xml:/etc/clickhouse-server/config.xml
      #- ./clickhouse/users.xml:/etc/clickhouse-server/users.xml
      - clickhouse_data:/var/lib/clickhouse # Persistent data volume

  superset:
    image: apache/superset:3.1.0 
    container_name: superset
    restart: always
    depends_on:
      - clickhouse 
    ports:
      - "8088:8088"
    user: root
    environment:
      SUPERSET_SECRET_KEY: 'YOUR_VERY_LONG_SECRET_KEY_HERE'
      SUPERSET_DATABASE_URI: "clickhouse://default:password@clickhouse:8123/default"
    volumes:
      # Mount the volume to keep the Superset data persistent
      - superset_home:/app/superset_home
    #command: ["/app/docker/docker-init.sh"] # Standard initialization script

  producer:
    build:
      context: ./producer
      dockerfile: Dockerfile
    container_name: producer
    restart: on-failure
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER_URL: kafka:29092
      KAFKA_TOPIC: transaction_events
  
  consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    container_name: consumer
    restart: on-failure
    depends_on:
      - kafka
      - clickhouse
    environment:
      KAFKA_BROKER_URL: kafka:29092
      KAFKA_TOPIC: transaction_events
      CH_HOST: clickhouse
      CH_USER: ch_user
      CH_PASSWORD: ch_password

volumes:
  clickhouse_data:
  superset_home:
